因为要工作更快些，想下个PhotoShop自动更改图片的脚本，很自然的想到了SendKey，于是在硬盘的某个角落里发现了这篇文章（这是很早以前存在计算机中的），发出来，分享给大家吧~
巧用SendKey N步并一步上手实例：关机菜单立刻显身
　　打开记事本，输入以下命令，并将其保存为1.vbs：
set WshShell = CreateObject(“WScript.Shell”)
WshShell.SendKeys “^{ESC}u”
　　双击运行它，你会发现关机菜单立刻出现了。
Just Do It
将“WshShell.SendKeys “^{ESC}u””改为“WshShell.SendKeys “^+{ESC}””，运行一下看看效果。
知其所以然  SendKeys功能和使用
　　 上面实例中，我们运用了SendKeys命令，简单说，这个命令就是模拟键盘操作，将一个或多个按键指令发送到指定Windows窗口来控制应用程序运行，其使用格式为：
object.SendKeys string
“object”：表示WshShell对象，《菜鸟也来编程序》一文中已有过介绍。
“string”：表示要发送的按键指令字符串，需要放在英文双引号中。
1.基本键
　　一般来说，要发送的按键指令都可以直接用该按键字符本身来表示，例如要发送字母“x”，使用“WshShell.SendKeys “x””即可。当然，也可直接发送多个按键指令，只需要将按键字符按顺序排列在一起即可，例如，要发送按键“cfan”，可以使用“WshShell.SendKeys “cfan””。
2.特殊功能键
　　对于需要与Shift、Ctrl、Alt三个控制键组合的按键，SendKeys使用特殊字符来表示：
特殊控制键                 特殊字符
Shift                              +
Ctrl                               ^
Alt                                %
　　如要发送的组合按键是同时按下Ctrl＋E，需要用“WshShell.SendKeys “^e””表示，如果要发送的组合按键是按住Ctrl键的同时按下E与C两个键，这时应使用小括号把字母键括起来，书写格式为“WshShell.SendKeys “^(ec)””，这里要注意它与“WshShell.SendKeys “^ec””的区别，后者表示组合按键是同时按住Ctrl和E键，然后松开Ctrl键，单独按下“C”字母键。
由于“+”、“^”这些字符用来表示特殊的控制按键了，如何表示这些按键呢？只要用大括号括住这些字符即可。例如，要发送加号“+”，可使用“WshShell.SendKeys “{+}””。另外对于一些不会生成字符的控制功能按键，也同样需要使用大括号括起来按键的名称，例如要发送回车键，需要用“WshShell.SendKeys “{ENTER}””表示，发送向下的方向键用“WshShell.SendKeys “{DOWN}””表示。
小提示
　　如果需要发送多个重复的单字母按键，不必重复输入该字母，SendKeys允许使用简化格式进行描述，使用格式为“{按键 数字}”。例如要发送10个字母“x”，则输入“WshShell.SendKeys “{x 10}””即可。
3.翻译上手实例
　　“WshShell.SendKeys “^{ESC}u””这句翻译为：按下Ctrl＋Esc组合键（相当于按Win键）打开“开始”菜单，接着按U键打开“关机”菜单。
Just Do It
★让VBS脚本自动在记事本中输入一行文字“hello, welcome to cfan”。
Dim WshShell
Set WshShell=WScript.CreateObject(“WScript.Shell”)
WshShell.Run “notepad”
WScript.Sleep 200
WshShell.AppActivate “无标题 – 记事本”
WshShell.SendKeys “hello, welcome to cfan”
★请改造这个脚本，让它自动输入下面两段小短句，注意前面介绍的回车键发送方法哦。
This is the most wonderful day of my life
because I’m here with you now
★让脚本在输入短句后自动关闭记事本，并保存文件名为“test”，注意关闭记事本可以直接使用组合按键Alt＋F4来实现。
进阶实例：制作能自动定时存盘的记事本
　　我们最常用的记事本没有Word、WPS那样的自动定时存盘功能，其实利用VBS脚本再加上SendKeys命令，就能弥补这个遗憾。打开记事本，输入以下内容（为容易描述和分析，把代码分为四个部分）：
‘第一部分：定义变量和对象
Dim WshShell, AutoSaveTime, TXTFileName
AutoSaveTime=300000
Set WshShell=WScript.CreateObject(“WScript.Shell”)
TXTFileName=InputBox(“请输入你要创建的文件名(不能用中文和纯数字)：”)
‘第二部分：打开并激活记事本
WshShell.Run “notepad”
WScript.Sleep 200
WshShell.AppActivate “无标题 – 记事本”
‘第三部分：用输入的文件名存盘
WshShell.SendKeys “^s”
WScript.Sleep 300
WshShell.SendKeys TXTFileName
WScript.Sleep 300
WshShell.SendKeys “%s”
WScript.Sleep AutoSaveTime
‘第四部分：自动定时存盘
While WshShell.AppActivate (TXTFileName)=True
WshShell.SendKeys “^s”
WScript.Sleep AutoSaveTime
Wend
WScript.Quit
　　将其保存为记事本.vbs，以后要使用记事本时，都通过双击这个脚本文件来打开。
程序翻译
　　这个脚本的基本思路是定时向记事本发送Ctrl＋S这个存盘组合键。
第一部分：定义了脚本中需要用到的变量和对象。“AutoSaveTime”变量用来设置自动存盘间隔，单位为毫秒，这里设置为5分钟。“TXTFileName”变量通过输入框取得你要创建的文本文件名称（见图1）。
第二部分：运行记事本，对于Windows本身提供的程序，比如计算器等，可直接在“WshShell.Run”后输入程序名称，如”calc”，对于非系统程序，则可输入完全路径，但要注意使用8.3格式输入，比如“”D:\Progra~1\Tencent\QQ.exe””。
第三部分：这里用SendKeys命令执行了这样的操作流程（请注意每个操作之间延时命令的使用）：
在记事本中按Ctrl＋S组合键→弹出保存文件的窗口→输入文件名→按Alt＋S组合键进行保存（默认保存在“我的文档”目录）。
第四部分：定时存盘的关键，通过“While……Wend”这个当条件为“真”时循环命令，实现自动存盘代码“WshShell.SendKeys “^s””和定时代码“WScript.Sleep AutoSaveTime”的重复执行。因为不能让这个定时存盘循环一直执行，退出记事本后，必须自动退出脚本并结束循环，所以设计了一个循环判断条件“WshShell.AppActivate TXTFileName=True”，当记事本运行中时，可以激活记事本窗口，这个条件运行结果为“True”，定时存盘循环一直执行，退出记事本后，脚本无法激活记事本窗口，就会跳出循环，执行“Wend”后面的“WScript.Quit”退出脚本